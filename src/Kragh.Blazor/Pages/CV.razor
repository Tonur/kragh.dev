@page "/cv"
@using Kragh.Shared
@using Flurl
@using Flurl.Http
@inject ClientConfiguration _config

@if (LinkedInResponse is null)
{
	<em>Loading...</em>
}
else
{
	<img src="@LinkedInResponse.ProfilePicUrl" alt="@LinkedInResponse.FullName" />

	<h1>CV</h1>

	<p>A list of my accomplishments.</p>

	<div class="badge-base LI-profile-badge"
	 data-locale="da_DK" data-size="medium"
	 data-theme="dark" data-type="VERTICAL"
	 data-vanity="christoffer-pedersen-826690145" data-version="v1">
		<a class="badge-base__link LI-simple-link"
	   href="https://dk.linkedin.com/in/christoffer-pedersen-826690145?trk=profile-badge">
			Christoffer Pedersen
		</a>
	</div>


	<br />

	<div class="row justify-content-between">
		<div class="col-6">
			<h2>Jobs</h2>
			@foreach (var experiencesByCompany in LinkedInResponse.Experiences
					.GroupBy(experience => new { experience.Company, experience.LogoUrl, experience.CompanyLinkedInProfileUrl }))
			{
				<CardItem ItemTitle="@experiencesByCompany.Key.Company"
				  LogoUrl="@experiencesByCompany.Key.LogoUrl.ToString()"
				  LinkedInProfileUrl="@experiencesByCompany.Key.CompanyLinkedInProfileUrl.ToString()"
				  ItemEntities="@experiencesByCompany.Select(item => new ItemEntity { Title = item.Title, Description = item.Description, Location = item.Location, StartsAt = item.StartsAt, EndsAt = item.EndsAt})" />
				<br />
			}
		</div>

		<div class="col-6">
			<h2>Educations</h2>
			@foreach (var experiencesByCompany in LinkedInResponse.Education
					.GroupBy(experience => new { experience.School, experience.LogoUrl }))
			{
				<CardItem ItemTitle="@experiencesByCompany.Key.School"
				  LogoUrl="@experiencesByCompany.Key.LogoUrl.ToString()"
				  ItemEntities="@experiencesByCompany.Select(item => new ItemEntity { Title = item.DegreeName, Description = item.FieldOfStudy, StartsAt = item.StartsAt, EndsAt = item.EndsAt})" />

				<br />
			}
		</div>
	</div>
}


@code {
	public LinkedInResponse? LinkedInResponse { get; set; }

	protected override async Task OnInitializedAsync()
	{
		LinkedInResponse = await _config.BaseAddress
			.AppendPathSegment("LinkedIn")
			.GetJsonAsync<LinkedInResponse>();

	}
}
